How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

It showed where the change happened, and so helped pinpoint the location of the
bug.

how could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Can easily revert to a working version if a new version contains a bug.

What do you think are the pros and cons of manually choosing when to create a
commit, like yo do in Git, vs having versions automatically saved, like Google
Docs does?

Pros of manually choosing to commit:
	-Gurantees that the commits will contain complete and logical changes that
	make sense(if done right).
Cons:
	-The programmer may sometimes forget to commit.


Why do you think some version control systems, like Git, allow saving multiple
 files in one commit, while others, like Google Docs, treat each file 
 separately?
 
 Because Git was made for programmers, and in any large program, you would 
 define a piece of logic somewhere, and use it somewhere else. Thus, separate
 files can be closely related and dependant on each other.

 Google Docs was made to store docs, not for programming purposes, and so 
 comiting multiple files at once is just not required.
 
 How can you use the commands git log and git diff to view the history of files?

 use git log to show the list of the history of the files with the id of each 
 file
 then use git diff to compare

 How might using version control make you more confident to make changes that
 could break something?
 
 You don't have to worry if things get messed up because you can always go back

 
 Now that you have your workspace set up, what do you want to try using Git for?
 
 I want to use git to make android apps
